<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Users">

    <!-- 사용자 정보를 삽입하는 쿼리 -->
    <insert id="insertUser" parameterType="com.kedu.firmware.DTO.UsersDTO">
        INSERT INTO users (
            users_seq, users_code, users_name, users_password, 
            users_email, users_full_name, department_code, 
            unit_code, users_created_at, users_updated_at, users_is_admin
        )
        VALUES (
            users_seq.NEXTVAL, #{users_code}, #{users_name}, #{users_password}, 
            #{users_email}, #{users_full_name}, #{department_code}, 
            #{unit_code}, SYSTIMESTAMP, SYSTIMESTAMP, 
            <if test="users_is_admin != null">
                #{users_is_admin}
            </if>
            <if test="users_is_admin == null">
                0
            </if>
        )
    </insert>

    <!-- 사용자 코드로 사용자 정보를 조회하는 쿼리 -->
    <select id="findUserByCode" parameterType="String" resultType="com.kedu.firmware.DTO.UsersDTO">
        SELECT * FROM users WHERE TRIM(users_code) = TRIM(#{users_code})
    </select>

    <!-- 사용자 시퀀스 ID로 사용자 정보를 조회하는 쿼리 -->
    <select id="findUserBySeq" parameterType="int" resultType="com.kedu.firmware.DTO.UsersDTO">
        SELECT * FROM users WHERE users_seq = #{users_seq}
    </select>

    <!-- 사용자 정보를 업데이트하는 쿼리 -->
    <update id="updateUser" parameterType="com.kedu.firmware.DTO.UsersDTO">
        UPDATE users SET
            users_name = #{users_name},
            users_password = #{users_password},
            users_email = #{users_email},
            users_full_name = #{users_full_name},
            department_code = #{department_code},
            unit_code = #{unit_code},
            users_created_at = #{users_created_at},
            users_updated_at = SYSTIMESTAMP,
            users_is_admin = 
            <if test="users_is_admin != null">
                #{users_is_admin}
            </if>
            <if test="users_is_admin == null">
                0
            </if>
        WHERE users_seq = #{users_seq}
    </update>

    <!-- 사용자 시퀀스로 사용자 정보를 삭제하는 쿼리 -->
    <delete id="deleteUser" parameterType="int">
        DELETE FROM users WHERE users_seq = #{users_seq}
    </delete>

    <!-- 사용자 코드로 사용자 정보를 조회하는 쿼리 (별칭 사용) -->
    <select id="selectById" parameterType="String" resultType="com.kedu.firmware.DTO.UsersDTO">
        SELECT * FROM users WHERE users_code = #{id}
    </select>
    
    <!-- 부서 코드로 직원 수를 카운트하는 쿼리 -->
    <select id="countEmployeesInDepartment" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM users WHERE SUBSTR(users_code, 1, LENGTH(#{departmentCode})) = #{departmentCode}
    </select>
    
    <!-- 방금 삽입한 유저의 시퀀스를 가져오는 쿼리 -->
    <select id="getLastInsertedUserSeq" resultType="int">
        SELECT users_seq.CURRVAL FROM dual
    </select>

    <!-- 모든 사용자 정보를 조회하는 쿼리 추가 -->
    <!-- 전체 사용자 정보를 조회하여 반환하는 쿼리 -->
    <select id="getAllUsers" resultType="com.kedu.firmware.DTO.UsersDTO">
        SELECT * FROM users
    </select>

</mapper>
